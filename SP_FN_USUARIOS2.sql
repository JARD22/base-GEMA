SELECT * FROM USUARIO
SELECT * FROM PERSONA
SELECT * FROM TIPO_PERSONA
SELECT * FROM ESTADO
SELECT * FROM CORREO


SELECT * FROM FN_LISTA_USUARIOS(0)
CREATE OR REPLACE FUNCTION FN_LISTA_USUARIOS(IN_OFFSET INT) RETURNS TABLE(OUT_COD_USUARIO INT,OUT_NOMBRE TEXT,OUT_COD_ESTADO INT,
																		  OUT_ESTADO VARCHAR,OUT_CORREO VARCHAR,OUT_TOTAL BIGINT,
																		  OUT_PRIMER_INGRESO BOOLEAN)
AS
$$
BEGIN
RETURN QUERY
SELECT USUARIO.COD_USUARIO,CONCAT(PERSONA.PRIMER_NOMBRE,' ',PERSONA.PRIMER_APELLIDO),
ESTADO.COD_ESTADO,ESTADO.DESCRIPCION,USUARIO,(SELECT COUNT(COD_USUARIO) FROM USUARIO),USUARIO.PRIMER_INGRESO
FROM USUARIO
INNER JOIN ESTADO ON USUARIO.COD_ESTADO= ESTADO.COD_ESTADO
INNER JOIN PERSONA ON USUARIO.COD_PERSONA = PERSONA.COD_PERSONA
GROUP BY USUARIO.COD_USUARIO,PERSONA.PRIMER_NOMBRE,PERSONA.PRIMER_APELLIDO,ESTADO.COD_ESTADO,ESTADO.DESCRIPCION
OFFSET IN_OFFSET
LIMIT 10;
END;
$$
LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION FN_LISTA_ESTADOS()RETURNS TABLE(OUT_COD_ESTADO INT, OUT_NOMBRE VARCHAR)
AS
$$
BEGIN
RETURN QUERY
SELECT COD_ESTADO, DESCRIPCION FROM ESTADO;
END;
$$
LANGUAGE PLPGSQL;


SELECT * FROM USUARIO
UPDATE USUARIO SET CONTRASENA ='123344',
					PRIMER_INGRESO=FALSE
					WHERE COD_USUARIO =2

CREATE OR REPLACE PROCEDURE SP_ACTIVAR_USUARIO(IN_COD_USUARIO INT,IN_CONTRASENA VARCHAR)
AS
$$
BEGIN
UPDATE USUARIO SET CONTRASENA = IN_CONTRASENA,
				   PRIMER_INGRESO = TRUE,
				   COD_ESTADO=1
				   WHERE USUARIO.COD_USUARIO =IN_COD_USUARIO;

END;
$$
LANGUAGE PLPGSQL;


CREATE OR REPLACE PROCEDURE SP_CAMBIAR_CONTRASENA(IN_CORREO VARCHAR, IN_CONTRASENA VARCHAR)
AS
$$
BEGIN

IF NOT EXISTS(SELECT USUARIO FROM USUARIO WHERE USUARIO=IN_CORREO)THEN
RAISE EXCEPTION USING HINT= 'Correo no registrado';
END IF;


UPDATE USUARIO SET CONTRASENA = IN_CONTRASENA
WHERE USUARIO=IN_CORREO;
END;
$$
LANGUAGE PLPGSQL;


SELECT * FROM FN_CONTRASENA_USUARIO('giito16@gmail.com')
CREATE OR REPLACE FUNCTION FN_CONTRASENA_USUARIO(CORREO VARCHAR)RETURNS TABLE(OUT_CONTRASENA VARCHAR)
AS
$$
BEGIN
RETURN QUERY
SELECT CONTRASENA FROM USUARIO WHERE USUARIO.USUARIO=CORREO;
END;
$$
LANGUAGE PLPGSQL;

CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_CONTRASENA(ACTUAL VARCHAR,CORREO VARCHAR)
AS
$$
BEGIN
UPDATE USUARIO SET CONTRASENA = ACTUAL WHERE USUARIO = CORREO;
END;
$$
LANGUAGE PLPGSQL;


