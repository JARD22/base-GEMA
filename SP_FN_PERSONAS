--PROCEDIMIENTOS ALMACENADOS Y FUNCIONES MODULO DE PERSONAS.

ALTER TABLE TELEFONO ADD COLUMN EMERGENCIA BOOLEAN

SELECT*FROM TIPO_PERSONA

INSERT INTO TIPO_PERSONA(NOMBRE,USR_REGISTRO,FEC_REGISTRO)
	     VALUES('USUARIO','ADMIN',CURRENT_DATE)
		 VALUES('ALUMNO','ADMIN',CURRENT_DATE)
	     VALUES('ENCARGADO','ADMIN',CURRENT_DATE)
	     VALUES('MADRE','ADMIN',CURRENT_DATE)
	     VALUES('PADRE','ADMIN',CURRENT_DATE)

INSERT INTO TIPO_TELEFONO(NOMBRE,DESCRIPCION,USR_REGISTRO,FEC_REGISTRO)
			VALUES ('CELULAR','TELEFONO CELULAR','ADMIN',CURRENT_DATE)
			VALUES ('CASA','TELEFONO CASA','ADMIN',CURRENT_DATE)

INSERT INTO PERSONA(COD_TIPO_PERSONA,DNI,PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,
					SEXO,FEC_NACIMIENTO,USR_REGISTRO,FEC_REGISTRO)
			VALUES(5,'0000000000000','JORGE','RAUL','AGUILERA','DURON','M','01-01-01','ADMIN',CURRENT_DATE)

SELECT * FROM PERSONA

--LISTA TODAS LAS PERSONAS
SELECT * FROM FN_LISTA_PERSONAS(0)
CREATE OR REPLACE FUNCTION FN_LISTA_PERSONAS(IN_OFFSET INT ) RETURNS TABLE (OUT_UID UUID, OUT_NOMBRE TEXT,OUT_TIPO VARCHAR)
AS
$$
BEGIN
RETURN QUERY
SELECT UID, CONCAT(PRIMER_NOMBRE,' ',SEGUNDO_NOMBRE,' ',PRIMER_APELLIDO),TIPO_PERSONA.NOMBRE FROM PERSONA
INNER JOIN TIPO_PERSONA ON PERSONA.COD_TIPO_PERSONA = TIPO_PERSONA.COD_TIPO_PERSONA
OFFSET IN_OFFSET
LIMIT 8;
END;
$$
LANGUAGE PLPGSQL;
--FIN LISTA TODAS LAS PERSONAS

--LISTA TIPO PERSONAS
SELECT * FROM FN_LISTA_TIPO_PERSONA()
CREATE OR REPLACE FUNCTION FN_LISTA_TIPO_PERSONA()RETURNS TABLE(OUT_ID INT, OUT_NOMBRE VARCHAR)
AS
$$
BEGIN
RETURN QUERY
SELECT COD_TIPO_PERSONA, NOMBRE FROM TIPO_PERSONA
ORDER BY NOMBRE;
END;
$$
LANGUAGE PLPGSQL;
--FIN LISTA TIPO PERSONAS
SELECT*FROM PERSONA
SELECT * FROM TELEFONO
SELECT * FROM TELEFONO_PERSONA
--REGISTRAR PERSONA USUARIO

CALL SP_PERSONA_USUARIO(5,'0000000000001','ADMIN','ADMIN','HONDUREÑA','M','2001-01-01',
					   	'ADMIN','jorgeaguilera.agz@gmail.com','DIRECCION ADMIN',
						'[{"telefono":"9999999","cod_tipo_telefono":"1"},{"telefono":"9999992","cod_tipo_telefono":"2"}]',
					   	'ADMIN','ADMIN')


CREATE OR REPLACE PROCEDURE SP_PERSONA_USUARIO(
					IN_COD_TIPO_PERSONA INT,IN_DNI VARCHAR,IN_PRIMER_NOMBRE VARCHAR,IN_PRIMER_APELLIDO VARCHAR,
					IN_NACIONALIDAD VARCHAR,IN_SEXO CHAR,IN_FEC_NACIMIENTO DATE,
					IN_USR_REGISTRO VARCHAR,IN_CORREO VARCHAR,IN_DIRECCION VARCHAR,IN_TELEFONOS JSON,
					IN_SEGUNDO_NOMBRE VARCHAR DEFAULT '',IN_SEGUNDO_APELLIDO VARCHAR DEFAULT '' )


AS
$$
DECLARE CODIGO_PERSONA INT;
		CODIGO_DIRECCION INT;
		CODIGO_TELEFONO INT;
		CODIGO_CORREO INT;
		i JSON;
	

BEGIN
--PERSONA

IF EXISTS(SELECT PERSONA.DNI FROM PERSONA WHERE PERSONA.DNI=IN_DNI) THEN
RAISE EXCEPTION USING HINT ='DNI ya está registrado';
RETURN;
END IF;

INSERT INTO PERSONA(COD_TIPO_PERSONA,DNI,PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,
					NACIONALIDAD,SEXO,FEC_NACIMIENTO,USR_REGISTRO,FEC_REGISTRO)
VALUES(IN_COD_TIPO_PERSONA,IN_DNI,IN_PRIMER_NOMBRE,IN_SEGUNDO_NOMBRE,IN_PRIMER_APELLIDO,IN_SEGUNDO_APELLIDO,
	   IN_NACIONALIDAD,IN_SEXO,IN_FEC_NACIMIENTO,IN_USR_REGISTRO,CURRENT_DATE);				
					
CODIGO_PERSONA:= (SELECT MAX(COD_PERSONA) FROM PERSONA);

--CORREO
IF EXISTS(SELECT CORREO.CORREO FROM CORREO WHERE CORREO.CORREO = IN_CORREO)THEN
RAISE EXCEPTION USING HINT = 'Correo ya está registrado';
RETURN;
END IF;

INSERT INTO CORREO(CORREO,USR_REGISTRO,FEC_REGISTRO)
VALUES(IN_CORREO,IN_USR_REGISTRO,CURRENT_DATE);

CODIGO_CORREO:= (SELECT MAX(COD_CORREO) FROM CORREO);

--CORREO-PERSONA
INSERT INTO CORREO_PERSONA(COD_PERSONA,COD_CORREO)
VALUES(CODIGO_PERSONA,CODIGO_CORREO);

--DIRECCION

INSERT INTO DIRECCION(DIRECCION,USR_REGISTRO,FEC_REGISTRO)
VALUES(IN_DIRECCION,IN_USR_REGISTRO,CURRENT_DATE);

CODIGO_DIRECCION:=(SELECT MAX(COD_DIRECCION) FROM DIRECCION);

--DIRECCION-PERSONA
INSERT INTO DIRECCION_PERSONA(COD_PERSONA,COD_DIRECCION)
VALUES (CODIGO_PERSONA,CODIGO_DIRECCION);

--NUMEROS DE TELEFONO
   FOR i IN SELECT * FROM json_array_elements(IN_TELEFONOS)
   LOOP
    INSERT INTO TELEFONO(TELEFONO,COD_TIPO_TELEFONO,WHATSAPP,EMERGENCIA,USR_REGISTRO,FEC_REGISTRO)
	VALUES(i->>'telefono',CAST(i->>'cod_tipo_telefono' AS INT),'false','false',IN_USR_REGISTRO,CURRENT_DATE);
	
	CODIGO_TELEFONO:=(SELECT MAX(COD_TELEFONO) FROM TELEFONO);
	
	--TELEFONO-PERSONA
	INSERT INTO TELEFONO_PERSONA(COD_TELEFONO,COD_PERSONA)
	VALUES(CODIGO_TELEFONO,CODIGO_PERSONA);
   END LOOP;


END;
$$
LANGUAGE PLPGSQL;

 

